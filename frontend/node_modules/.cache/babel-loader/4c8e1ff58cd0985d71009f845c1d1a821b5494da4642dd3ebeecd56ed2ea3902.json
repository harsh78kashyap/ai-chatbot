{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARSH KASHYAP\\\\Desktop\\\\ai chatbot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState('');\n  const sendMessage = async () => {\n    if (!message) return;\n    try {\n      const res = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await res.json();\n      setResponse(data.reply || data.error || 'No response');\n    } catch (error) {\n      console.error('Error connecting to backend:', error);\n      setResponse('Error connecting to backend');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type your message here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Response:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"20T8i7C4Cxplj75viXdaeiEeoII=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","App","_s","message","setMessage","response","setResponse","sendMessage","res","fetch","method","headers","body","JSON","stringify","data","json","reply","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HARSH KASHYAP/Desktop/ai chatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('');\r\n  const [response, setResponse] = useState('');\r\n\r\n  const sendMessage = async () => {\r\n    if (!message) return;\r\n\r\n    try {\r\n      const res = await fetch(`${API_URL}/chat`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      setResponse(data.reply || data.error || 'No response');\r\n    } catch (error) {\r\n      console.error('Error connecting to backend:', error);\r\n      setResponse('Error connecting to backend');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>AI Chatbot</h1>\r\n      <textarea\r\n        rows=\"4\"\r\n        cols=\"50\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"Type your message here...\"\r\n      />\r\n      <br />\r\n      <button onClick={sendMessage}>Send</button>\r\n      <h2>Response:</h2>\r\n      <p>{response}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACJ,OAAO,EAAE;IAEd,IAAI;MACF,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGZ,OAAO,OAAO,EAAE;QACzCa,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAQ,CAAC;MAClC,CAAC,CAAC;MAEF,MAAMY,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7BV,WAAW,CAACS,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACG,KAAK,IAAI,aAAa,CAAC;IACxD,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDZ,WAAW,CAAC,6BAA6B,CAAC;IAC5C;EACF,CAAC;EAED,oBACEV,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAAyB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB7B,OAAA;MACE8B,IAAI,EAAC,GAAG;MACRC,IAAI,EAAC,IAAI;MACTC,KAAK,EAAEzB,OAAQ;MACf0B,QAAQ,EAAGC,CAAC,IAAK1B,UAAU,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAA2B;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACF7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAQqC,OAAO,EAAE1B,WAAY;MAAAc,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3C7B,OAAA;MAAAyB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB7B,OAAA;MAAAyB,QAAA,EAAIhB;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACvB,EAAA,CAxCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}